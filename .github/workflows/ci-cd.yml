name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - githubactions
      - tests
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' # or any version you require

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-flask

      - name: Run tests with pytest
        run: pytest

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/joke-generator:${{ github.sha }} .

      - name: Push to DockerHub
        if: github.event_name != 'pull_request' && success()
        run: docker push ${{ secrets.DOCKER_USERNAME }}/joke-generator:${{ github.sha }}

  deploy:
    needs: build-and-push
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Pull and Tag the Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/joke-generator:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/joke-generator:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/joke-generator:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/joke-generator:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/joke-generator:${{ github.event.release.tag_name }}

      - name: Push tagged images to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/joke-generator:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/joke-generator:${{ github.event.release.tag_name }}
